-- How many people in each city are estimated to consume coffee, given that 25% of the population does?

SELECT 
    city_name,
    ROUND((population * 0.25) / 1000000, 2) AS coffee_consumers_in_millions
FROM
    city
ORDER BY coffee_consumers_in_millions DESC




-- What is the total revenue generated from coffee sales across all cities in the last quarter of 2023?

SELECT 
    ci.city_name, SUM(s.total) AS total_revenue
FROM
    sales AS s
        JOIN
    customers AS c ON s.customer_id = c.customer_id
        JOIN
    city AS ci ON ci.city_id = c.city_id
WHERE
    EXTRACT(YEAR FROM s.sale_date) = 2023
        AND EXTRACT(QUARTER FROM s.sale_date) = 4
GROUP BY 1
ORDER BY 2 DESC




-- How many units of each coffee product have been sold?

SELECT 
    COUNT(s.sale_id) AS item_sold, p.product_name
FROM
    sales AS s
        LEFT JOIN
    products AS p ON s.product_id = p.product_id
GROUP BY 2
ORDER BY 1 DESC



-- What is the average sales amount per customer in each city?

SELECT 
    SUM(s.total) AS total_revenue,
    ci.city_name,
    COUNT(DISTINCT c.customer_id) as total_customers,
    round(SUM(s.total) / COUNT(DISTINCT c.customer_id),0) as avg_sale
FROM
    sales AS s
        JOIN
    customers AS c ON s.customer_id = c.customer_id
        JOIN
    city AS ci ON c.city_id = ci.city_id
GROUP BY 2
ORDER BY 1 DESC



-- Provide a list of cities along with their populations and estimated coffee consumers.

SELECT 
    ROUND((population * 0.25) / 1000000) AS population_total_million,
    city_name,
    COUNT(distinct c.customer_id) AS coffe_consumers
FROM
    city AS ci
        LEFT JOIN
    customers AS c ON ci.city_id = c.city_id
GROUP BY 1 , 2
ORDER BY 3 DESC




-- What are the top 3 selling products in each city based on sales volume?

select * from
 (
select cx.city_name ,p.product_name , COUNT(s.sale_id) as total_orders,
dense_rank () over(partition by cx.city_name order by COUNT(s.sale_id) desc ) as ranked
 from sales as s
 join  products as p 
 on s.product_id= p.product_id
 join customers as c 
 on c.customer_id= s.customer_id
 join city as cx
 on cx.city_id =c.city_id
 group by 1,2)  as t1

where ranked <=3


 
-- Customer Segmentation by City
-- How many unique customers are there in each city who have purchased coffee products?

SELECT 
    city_name, COUNT(DISTINCT c.customer_id) as unique_cust
FROM
    city AS ci
        JOIN
    customers AS c ON ci.city_id = c.city_id
GROUP BY 1
ORDER BY 2 DESC




-- Average Sale vs Rent
-- Find each city and their average sale per customer and avg rent per customer

with city_table as
(SELECT 
    ci.city_name,  SUM(s.total) AS total_revenue,
    COUNT(DISTINCT c.customer_id) as total_customers,
    round(SUM(s.total) / COUNT(DISTINCT c.customer_id),0) as avg_sale
FROM
    sales AS s
        JOIN
    customers AS c ON s.customer_id = c.customer_id
        JOIN
    city AS ci ON c.city_id = ci.city_id
GROUP BY 1
ORDER BY 2 DESC),
city_rent as 
(select city_name, estimated_rent from
city)

select cr.city_name , cr.estimated_rent ,ct.total_customers,ct.avg_sale ,round((cr.estimated_rent /ct.total_customers))as average_rent
from 
city_rent as cr  join city_table  as ct
on cr.city_name = ct.city_name 



-- Monthly Sales Growth
-- Sales growth rate: Calculate the percentage growth (or decline) in sales over different time periods (monthly)
-- by each city

with monthly_sales as (
SELECT 
    city_name,
    EXTRACT(MONTH FROM sale_date) AS months,
    EXTRACT(YEAR FROM sale_date) AS years,
    SUM(s.total) AS total_sale
FROM
    sales AS s
        JOIN
    customers AS c ON s.customer_id = c.customer_id
        JOIN
    city AS ci ON ci.city_id = c.city_id
GROUP BY 1 , 2 , 3
order by 1,3,2 )
, growth_ratio as
 (select city_name,
			months,
			years,
			total_sale as cr_month_sale,
            lag(total_sale,1) over(partition by city_name order by years, months ) as last_month_sale
			
		FROM monthly_sales)
        SELECT 
    city_name,
    months,
    years,
    cr_month_sale,
    last_month_sale,
    (cr_month_sale / last_month_sale) * 100 AS percent_growth
FROM
    growth_ratio
WHERE
    last_month_sale IS NOT NULL





-- Market Potential Analysis
-- Identify top 3 city based on highest sales, return city name, total sale, total rent, total customers, estimated coffee consumer

with 
city_table as(
SELECT 
	ci.city_name,
	SUM(s.total) as total_revenue,
	COUNT(DISTINCT s.customer_id) as total_cx,
	ROUND(SUM(s.total)/
	COUNT(DISTINCT s.customer_id),2) as avg_sale_pr_cx
	
FROM sales as s
JOIN customers as c
ON s.customer_id = c.customer_id
JOIN city as ci
ON ci.city_id = c.city_id
GROUP BY 1
ORDER BY 2 DESC),
city_rent as
(SELECT 
    city_name, estimated_rent
FROM
    city)

SELECT 
    cr.city_name,
    cr.estimated_rent,
    total_revenue,
    total_cx,
    avg_sale_pr_cx,
    ROUND((cr.estimated_rent / total_cx)) AS average_rent
FROM
    city_rent AS cr
        JOIN
    city_table AS ct ON cr.city_name = ct.city_name
ORDER BY 3



/*
-- Recomendation
City 1: Pune
	1.Average rent per customer is very low.
	2.Highest total revenue.
	3.Average sales per customer is also high.

City 2: Delhi
	1.Highest estimated coffee consumers at 7.7 million.
	2.Highest total number of customers, which is 68.
	3.Average rent per customer is 330 (still under 500).

City 3: Jaipur
	1.Highest number of customers, which is 69.
	2.Average rent per customer is very low at 156.
	3.Average sales per customer is better at 11.6k.








